import sys
from addict import Dict


def get_severity_order():
    _severities = ["LOW", "MODERATE", "HIGH", "CRITICAL"]
    return _severities


def reset():
    _severities = get_severity_order()
    _vulnerable_by_severity = {sev: [] for sev in _severities}
    return _vulnerable_by_severity


def _get_severity(repo):
    _severities = get_severity_order()
    maxSeverityIndex = -1
    severity = "NONE"

    for vaEdge in repo.vulnerabilityAlerts.edges:
        print(vaEdge.node.packageName, file=sys.stderr)

        for vEdge in vaEdge.node.securityAdvisory.vulnerabilities.edges:

            edgeSeverity = vEdge.node.severity
            print(f"{vEdge.node.package.name} : {edgeSeverity}", file=sys.stderr)
            severityIndex = _severities.index(edgeSeverity)
            print(f"{edgeSeverity}: {severityIndex}", file=sys.stderr)
            if severityIndex > maxSeverityIndex:
                maxSeverityIndex = severityIndex
                severity = edgeSeverity

    return severity


def collate_by_severity(repositories):
    _vulnerable_by_severity = reset()
    [_vulnerable_by_severity[_get_severity(repo)].append(repo) for repo in repositories]
    return Dict(_vulnerable_by_severity)
